scp_program -> proc_of_simply_the_sc_design_search_kvazibinary (*	
	
	-> rrel_params: ...(*
		// состояние
		-> rrel_1: rrel_in: _state;;
// ВНИМАНИЕ !!! НУЖНО УДАЛИТЬ ИЛИ ЗАМЕНИТЬ НА МНОЖЕСТВО КОРНЕВЫХ ЭЛ-ОВ
		// корневой элемент контура
		-> rrel_2: rrel_in: _root;;
		// исходный контур
		-> rrel_3: rrel_in: _contour;;
		// преобразованный контур
		-> rrel_4: rrel_out: rrel_assign: rrel_scp_var: _new_contour;;
		// утверждение
		-> rrel_5: rrel_out: rrel_assign: rrel_scp_var: _stat;;
	*);;

	-> rrel_operators: ...(*
		
		-> rrel_init: ..print1 (*
			<- printNl;;
			-> rrel_1: rrel_fixed: rrel_scp_const: [Процедура преобразования контура. Вход];;
			=> nrel_goto: ..proc_1;;
	   	*);;

	   	-> ..proc_1 (*
			<- genEl;;
			-> rrel_1: rrel_assign: rrel_scp_var: rrel_node: rrel_const: _new_contour;;
			=> nrel_goto: ..proc_2;;
		*);;

	   	// копируем контур
		-> ..proc_2 (*
			<- searchSetStr3;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _contour;;
			-> rrel_2: rrel_assign: rrel_scp_var: rrel_pos_const_perm: _arc;;
			-> rrel_3: rrel_assign: rrel_scp_var: _els;;
			-> rrel_set_3: rrel_fixed: rrel_scp_var: _new_contour;;
			=> nrel_goto: ..proc_3;;
		*);;

		// множество сущностей которые нужно удалить в контуре new_contour
		-> ..proc_3 (*
			<- genEl;;
			-> rrel_1: rrel_assign: rrel_scp_var: rrel_node: rrel_const: _delete_entity;;
			=> nrel_goto: ..proc_4;;
		*);;

		// множество связок биекций new_contour с правой частью найденного правила
		-> ..proc_4 (*
			<- genEl;;
			-> rrel_1: rrel_assign: rrel_scp_var: rrel_node: rrel_const: _bijection;;
			=> nrel_goto: ..proc_4_1;;
		*);;

// ####################
		// череда проверок
		// ищем квазибинарное отношение 
		-> ..proc_4_1 (*
			<- searchElStr5;;
			-> rrel_1: rrel_assign: rrel_scp_var: _svyazka;;
			-> rrel_2: rrel_assign: rrel_scp_var: rrel_common: rrel_var: _arc;;
			-> rrel_3: rrel_fixed: rrel_scp_var: _root;;
			-> rrel_4: rrel_assign: rrel_scp_var: rrel_pos_const_perm: _arc2;;			
			-> rrel_5: rrel_fixed: rrel_scp_var: _new_contour;;
			=> nrel_then: ..proc_5_1;;
			=> nrel_else: ..print4;;
		*);;

		// ищем квазибинарную связку и добавляем, что нужно удалить
		-> ..proc_5_1 (*
			<- genElStr3;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _delete_entity;;
			-> rrel_2: rrel_assign: rrel_scp_var: rrel_pos_const_perm: _arc2;;
			-> rrel_3: rrel_fixed: rrel_scp_var: _svyazka;;
			=> nrel_goto: ..proc_5_2;;
		*);;

		-> ..proc_5_2 (*
			<- genElStr3;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _delete_entity;;
			-> rrel_2: rrel_assign: rrel_scp_var: rrel_pos_const_perm: _arc2;;
			-> rrel_3: rrel_fixed: rrel_scp_var: _svyazka;;
			=> nrel_goto: ..proc_5_2;;
		*);;

		-> ..proc_5 (*
			<- searchSetStr5;;
			-> rrel_1: rrel_assign: rrel_scp_var: _svyazka;;
			-> rrel_2: rrel_assign: rrel_scp_var: rrel_common: rrel_var: _arc;;
			-> rrel_3: rrel_fixed: rrel_scp_var: _root;;
			-> rrel_4: rrel_assign: rrel_scp_var: rrel_pos_const_perm: _arc2;;			
			-> rrel_5: rrel_fixed: rrel_scp_var: _new_contour;;
			-> rrel_set_1: rrel_fixed: rrel_scp_var: _delete_entity;;
			-> rrel_set_2: rrel_fixed: rrel_scp_var: _delete_entity;;
			=> nrel_then: ..proc_6;;
			=> nrel_else: ..print4;;
		*);;

		-> ..print4 (*
			<- printNl;;
			-> rrel_1: rrel_fixed: rrel_scp_const: [Ошибка. Бинарная связка не найдена];;
			=> nrel_goto: ..print3;;
		*);;

		// находим узел отношения
		-> ..proc_6 (*
			<- searchSetStr3;;			
			-> rrel_1: rrel_assign: rrel_scp_var: _nrel;;
			-> rrel_2: rrel_assign: rrel_scp_var: rrel_pos: rrel_var: rrel_perm: _arc2;;			
			-> rrel_3: rrel_fixed: rrel_scp_var: _arc;;
			-> rrel_set_2: rrel_fixed: rrel_scp_var: _delete_entity;;
			=> nrel_then: ..proc_7;;
			=> nrel_else: ..print5;;
		*);;

		-> ..print5 (*
			<- printNl;;
			-> rrel_1: rrel_fixed: rrel_scp_const: [Ошибка. Отношение не найдено];;
			=> nrel_goto: ..print3;;
		*);;

		-> ..proc_7 (*
			<- searchSetStr3;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _svyazka;;
			-> rrel_2: rrel_assign: rrel_scp_var: rrel_pos: rrel_var: rrel_perm: _arc;;
			-> rrel_3: rrel_assign: rrel_scp_var: _els;;

			-> rrel_set_2: rrel_fixed: rrel_scp_var: _delete_entity;;			
			-> rrel_set_3: rrel_assign: rrel_scp_var: rrel_node: rrel_const: _A_B_in_new_contour;;
			
			=> nrel_then: .proc_of_simply_the_sc_design_search_isomorphic_00;;
			=> nrel_else: ..print6;;
		*);;

		-> ..print6 (*
			<- printNl;;
			-> rrel_1: rrel_fixed: rrel_scp_const: [Ошибка. Элементы в квазибинарном отношении не найдены];;
			=> nrel_goto: ..print3;;
		*);;

// запоминаем A, B, x 
		-> .proc_of_simply_the_sc_design_search_isomorphic_00 (*
			<- searchElStr3;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _A_B_in_new_contour;;
			-> rrel_2: rrel_assign: rrel_scp_var: rrel_pos_const_perm: _arc;;
			-> rrel_3: rrel_assign: rrel_scp_var: _A_in_new_contour;;
			=> nrel_goto: .proc_of_simply_the_sc_design_search_isomorphic_01;;
		*);;

		-> .proc_of_simply_the_sc_design_search_isomorphic_01 (*
			<- eraseEl;;
			-> rrel_1: rrel_fixed: rrel_erase: rrel_scp_var: _arc;;
			=> nrel_goto: .proc_of_simply_the_sc_design_search_isomorphic_02;;
		*);;

		-> .proc_of_simply_the_sc_design_search_isomorphic_02 (*
			<- searchElStr3;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _A_B_in_new_contour;;
			-> rrel_2: rrel_assign: rrel_scp_var: rrel_pos_const_perm: _arc;;
			-> rrel_3: rrel_assign: rrel_scp_var: _B_in_new_contour;;
			=> nrel_goto: .proc_of_simply_the_sc_design_search_isomorphic_03;;
		*);;

		-> .proc_of_simply_the_sc_design_search_isomorphic_03 (*
			<- eraseEl;;
			-> rrel_1: rrel_fixed: rrel_erase: rrel_scp_var: _arc;;
			=> nrel_goto: .proc_of_simply_the_sc_design_search_isomorphic_04;;
		*);;

		-> .proc_of_simply_the_sc_design_search_isomorphic_04 (*
			<- searchElStr3;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _root;;
			-> rrel_2: rrel_assign: rrel_scp_var: rrel_pos: rrel_var: rrel_perm: _arc;;
			-> rrel_3: rrel_assign: rrel_scp_var: _x_in_new_contour;;
			=> nrel_goto: .proc_of_simply_the_sc_design_search_isomorphic_1;;
		*);;

// ======================================>
		// множество контуров (если) правил 
		-> .proc_of_simply_the_sc_design_search_isomorphic_1 (*
			<- genEl;;
			-> rrel_1: rrel_assign: rrel_scp_var: rrel_node: rrel_const: _contour_left_rules;;
			=> nrel_goto: .proc_of_simply_the_sc_design_search_isomorphic_2;;
		*);;

		-> .proc_of_simply_the_sc_design_search_isomorphic_2 (*
			<- searchSetStr3;;
			-> rrel_1: rrel_assign: rrel_scp_var: _contours;;
			-> rrel_2: rrel_assign: rrel_scp_var: rrel_pos_const_perm: _arc;;
			-> rrel_3: rrel_fixed: rrel_scp_var: _nrel;;

			-> rrel_set_1: rrel_fixed: rrel_scp_var: _contour_left_rules;;
			
			=> nrel_goto: .proc_of_simply_the_sc_design_search_isomorphic_3;;
		*);;

		-> .proc_of_simply_the_sc_design_search_isomorphic_3 (*
			<- eraseElStr3;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _contour_left_rules;;
			-> rrel_2: rrel_assign: rrel_scp_var: rrel_pos_const_perm: rrel_erase: _arc;;
			-> rrel_3: rrel_fixed: rrel_scp_var: _contour;;		
			=> nrel_goto: .proc_of_simply_the_sc_design_search_isomorphic_4;;
		*);;

		-> .proc_of_simply_the_sc_design_search_isomorphic_4 (*
			<- eraseElStr3;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _contour_left_rules;;
			-> rrel_2: rrel_assign: rrel_scp_var: rrel_pos_const_perm: rrel_erase: _arc;;
			-> rrel_3: rrel_fixed: rrel_scp_var: _new_contour;;		
			=> nrel_goto: .proc_of_simply_the_sc_design_search_isomorphic_5;;
		*);;

// ВНИМАНИЕ. Предполагается что с таким отношением будет один контур
		-> .proc_of_simply_the_sc_design_search_isomorphic_5 (*
			<- searchElStr3;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _contour_left_rules;;
			-> rrel_2: rrel_assign: rrel_scp_var: rrel_pos_const_perm: _arc;;
			-> rrel_3: rrel_assign: rrel_scp_var: _contour_left_rule;;
			=> nrel_then: .proc_of_simply_the_sc_design_search_isomorphic_6;;
			=> nrel_else: ..print5;;
		*);;

		-> .proc_of_simply_the_sc_design_search_isomorphic_6 (*
			<- eraseEl;;
			-> rrel_1: rrel_fixed: rrel_erase: rrel_scp_var: _arc;;
			=> nrel_goto: .proc_of_simply_the_sc_design_search_isomorphic_5duyuwyuwge;;
		*);;

		-> .proc_of_simply_the_sc_design_search_isomorphic_5duyuwyuwge (*
			<- searchElStr3;;
			-> rrel_1: rrel_fixed: rrel_scp_const: atomic_existence;;
			-> rrel_2: rrel_assign: rrel_scp_var: rrel_pos_const_perm: _arc;;
			-> rrel_3: rrel_fixed: rrel_scp_var: _contour_left_rule;;
			=> nrel_then: .proc_of_simply_the_sc_design_search_isomorphic_71;;
			=> nrel_else: .proc_of_simply_the_sc_design_search_isomorphic_5;;
		*);;

// ====> находим элементы в контуре правила
		// C
		-> .proc_of_simply_the_sc_design_search_isomorphic_71 (*
			<- searchElStr5;;
			-> rrel_1: rrel_assign: rrel_scp_var: _svyazka_in_rule;;
			-> rrel_2: rrel_assign: rrel_scp_var: rrel_common: rrel_var: _arc;;
			-> rrel_3: rrel_assign: rrel_scp_var: _C;;
			-> rrel_4: rrel_assign: rrel_scp_var: rrel_pos_const_perm: _arc2;;
			-> rrel_5: rrel_fixed: rrel_scp_var: _contour_left_rule;;			
			=> nrel_then: .proc_of_simply_the_sc_design_search_isomorphic_72;;
			=> nrel_else: .proc_of_simply_the_sc_design_search_isomorphic_5;;
		*);;

		// сохраняем А, В в правиле
		-> .proc_of_simply_the_sc_design_search_isomorphic_72 (*
			<- searchSetStr3;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _svyazka_in_rule;;
			-> rrel_2: rrel_assign: rrel_scp_var: rrel_pos: rrel_var: rrel_perm: _arc;;
			-> rrel_3: rrel_assign: rrel_scp_var: _els;;

			-> rrel_set_3: rrel_assign: rrel_scp_var: rrel_node: rrel_const: _els_A_B;;

			=> nrel_goto: .proc_of_simply_the_sc_design_search_isomorphic_73;;
		*);;

		// A
		-> .proc_of_simply_the_sc_design_search_isomorphic_73 (*
			<- searchElStr3;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _els_A_B;;
			-> rrel_2: rrel_assign: rrel_scp_var: rrel_pos_const_perm: _arc;;
			-> rrel_3: rrel_assign: rrel_scp_var: _A;;
			=> nrel_goto: .proc_of_simply_the_sc_design_search_isomorphic_74;;
		*);;

		-> .proc_of_simply_the_sc_design_search_isomorphic_74 (*
			<- eraseEl;;
			-> rrel_1: rrel_fixed: rrel_erase: rrel_scp_var: _arc;;
			=> nrel_goto: .proc_of_simply_the_sc_design_search_isomorphic_75;;
		*);;

		// B
		-> .proc_of_simply_the_sc_design_search_isomorphic_75 (*
			<- searchElStr3;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _els_A_B;;
			-> rrel_2: rrel_assign: rrel_scp_var: rrel_pos_const_perm: _arc;;
			-> rrel_3: rrel_assign: rrel_scp_var: _B;;
			=> nrel_goto: .proc_of_simply_the_sc_design_search_isomorphic_76;;
		*);;

		-> .proc_of_simply_the_sc_design_search_isomorphic_76 (*
			<- eraseEl;;
			-> rrel_1: rrel_fixed: rrel_erase: rrel_scp_var: _arc;;
			=> nrel_goto: .proc_of_simply_the_sc_design_search_isomorphic_77;;
		*);;

		// x
		-> .proc_of_simply_the_sc_design_search_isomorphic_77 (*
			<- searchElStr3;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _C;;
			-> rrel_2: rrel_assign: rrel_scp_var: rrel_pos: rrel_var: rrel_perm: _arc;;
			-> rrel_3: rrel_assign: rrel_scp_var: _x;;
			=> nrel_goto: .proc_of_simply_the_sc_design_search_isomorphic_78;;
		*);;
// <====
		-> .proc_of_simply_the_sc_design_search_isomorphic_78 (*
			<- varAssign;;
			-> rrel_1: rrel_assign: rrel_scp_var: _nrel_bijection;;
			-> rrel_2: rrel_fixed: rrel_scp_const: nrel_bijection;;
			=> nrel_goto: .proc_of_simply_the_sc_design_search_isomorphic_79;;
		*);;

		-> .proc_of_simply_the_sc_design_search_isomorphic_79 (*
			<- call;; 
			-> rrel_1: rrel_fixed: rrel_scp_const: proc_to_create_a_non_oriented_cords;;
			-> rrel_2: rrel_fixed: rrel_scp_const: ... (*
				// в контуре
				-> rrel_1: rrel_fixed: rrel_scp_var: _A_in_new_contour;;
				
				// в найденном правиле
				-> rrel_2: rrel_fixed: rrel_scp_var: _A;;
				
				// отношение биекции
				-> rrel_3: rrel_fixed: rrel_scp_var: _nrel_bijection;;
			*);;
			-> rrel_3: rrel_assign: rrel_scp_var: _descr;;
			=> nrel_goto: .proc_of_simply_the_sc_design_search_isomorphic_710;;
		*);;

		-> .proc_of_simply_the_sc_design_search_isomorphic_710 (*
			<- waitReturn;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _descr;;
			=>nrel_goto: .proc_of_simply_the_sc_design_search_isomorphic_711;;
		*);;

		-> .proc_of_simply_the_sc_design_search_isomorphic_711 (*
			<- call;; 
			-> rrel_1: rrel_fixed: rrel_scp_const: proc_to_create_a_non_oriented_cords;;
			-> rrel_2: rrel_fixed: rrel_scp_const: ... (*
				-> rrel_1: rrel_fixed: rrel_scp_var: _B_in_new_contour;;
				-> rrel_2: rrel_fixed: rrel_scp_var: _B;;
				-> rrel_3: rrel_fixed: rrel_scp_var: _nrel_bijection;;
			*);;
			-> rrel_3: rrel_assign: rrel_scp_var: _descr;;
			=> nrel_goto: .proc_of_simply_the_sc_design_search_isomorphic_712;;
		*);;

		-> .proc_of_simply_the_sc_design_search_isomorphic_712 (*
			<- waitReturn;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _descr;;
			=>nrel_goto: .proc_of_simply_the_sc_design_search_isomorphic_713;;
		*);;

		-> .proc_of_simply_the_sc_design_search_isomorphic_713 (*
			<- call;; 
			-> rrel_1: rrel_fixed: rrel_scp_const: proc_to_create_a_non_oriented_cords;;
			-> rrel_2: rrel_fixed: rrel_scp_const: ... (*
				-> rrel_1: rrel_fixed: rrel_scp_var: _x_in_new_contour;;
				-> rrel_2: rrel_fixed: rrel_scp_var: _x;;
				-> rrel_3: rrel_fixed: rrel_scp_var: _nrel_bijection;;
			*);;
			-> rrel_3: rrel_assign: rrel_scp_var: _descr;;
			=> nrel_goto: .proc_of_simply_the_sc_design_search_isomorphic_714;;
		*);;

		-> .proc_of_simply_the_sc_design_search_isomorphic_714 (*
			<- waitReturn;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _descr;;
			=>nrel_goto: .proc_of_simply_the_sc_design_search_isomorphic_8;;
		*);;

// от левой части переходим к правой
		-> .proc_of_simply_the_sc_design_search_isomorphic_8 (*
			<- searchSetStr3;;
			-> rrel_1: rrel_assign: rrel_scp_var: _svyazka;;
			-> rrel_2: rrel_assign: rrel_scp_var: rrel_pos_const_perm: _arc;;
			-> rrel_3: rrel_fixed: rrel_scp_var: _contour_left_rule;;
			
			-> rrel_set_1: rrel_assign: rrel_scp_var: rrel_node: rrel_const: _svyazkas;;

			=> nrel_then: .proc_of_simply_the_sc_design_search_isomorphic_8_a;;
			=> nrel_else: ..print6;;
		*);;

		-> .proc_of_simply_the_sc_design_search_isomorphic_8_a (*
			<- searchElStr3;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _svyazkas;;
			-> rrel_2: rrel_assign: rrel_scp_var: rrel_pos_const_perm: _arc;;
			-> rrel_3: rrel_assign: rrel_scp_var: _svyazka;;
			
			=> nrel_then: .proc_of_simply_the_sc_design_search_isomorphic_8_b;;
			=> nrel_else: ..print3;;
		*);;

		-> .proc_of_simply_the_sc_design_search_isomorphic_8_b (*
			<- eraseEl;;
			-> rrel_1: rrel_fixed: rrel_scp_var: rrel_erase: _arc;;
			=> nrel_goto: .proc_of_simply_the_sc_design_search_isomorphic_8_c;;
		*);;

		-> .proc_of_simply_the_sc_design_search_isomorphic_8_c (*
			<- searchElStr3;;
			-> rrel_1: rrel_fixed: rrel_scp_const: nrel_equivalence;;
			-> rrel_2: rrel_assign: rrel_scp_var: rrel_pos_const_perm: _arc;;
			-> rrel_3: rrel_fixed: rrel_scp_var: _svyazka;;
			=> nrel_then: .proc_of_simply_the_sc_design_search_isomorphic_9;;
			=> nrel_else: .proc_of_simply_the_sc_design_search_isomorphic_8_a;;
		*);;

		-> .proc_of_simply_the_sc_design_search_isomorphic_9 (*
			<- searchSetStr3;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _svyazka;;
			-> rrel_2: rrel_assign: rrel_scp_var: rrel_pos_const_perm: _arc;;
			-> rrel_3: rrel_assign: rrel_scp_var: _contours;;

			-> rrel_set_3: rrel_assign: rrel_scp_var: rrel_node: rrel_const: _left_and_right;;

			=> nrel_goto: .proc_of_simply_the_sc_design_search_isomorphic_10;;
		*);;

		-> ..print6 (*
			<- printNl;;
			-> rrel_1: rrel_fixed: rrel_scp_const: [Извините. На данный момент связка импликации не обрабатывается];;
			=> nrel_goto: ..print3;;
		*);;

		-> .proc_of_simply_the_sc_design_search_isomorphic_10 (*
			<- eraseElStr3;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _left_and_right;;
			-> rrel_2: rrel_assign: rrel_scp_var: rrel_pos_const_perm: rrel_erase: _arc;;
			-> rrel_3: rrel_fixed: rrel_scp_var: _contour_left_rule;;		
			=> nrel_goto: .proc_of_simply_the_sc_design_search_isomorphic_11;;
		*);;

		-> .proc_of_simply_the_sc_design_search_isomorphic_11 (*
			<- searchElStr3;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _left_and_right;;
			-> rrel_2: rrel_assign: rrel_scp_var: rrel_pos_const_perm: _arc;;
			-> rrel_3: rrel_assign: rrel_scp_var: _found_a_bunch;;
			=> nrel_then: ..proc_search_1;;
			=> nrel_else: ..print7;;
		*);;

		-> ..print7 (*
			<- printNl;;
			-> rrel_1: rrel_fixed: rrel_scp_const: [Ошибка. Неверное правило];;
			=> nrel_goto: ..print3;;
		*);;

// =============================================>
// поиск утверждения
//	
		-> ..proc_search_1 (*
			<- searchElStr5;;
			-> rrel_1: rrel_assign: rrel_scp_var: _stat;;
			-> rrel_2: rrel_assign: rrel_scp_var: rrel_pos_const_perm: _arc;;
			-> rrel_3: rrel_fixed: rrel_scp_var: _svyazka;;
			-> rrel_4: rrel_assign: rrel_scp_var: rrel_pos_const_perm: _arc2;;
			-> rrel_5: rrel_fixed: rrel_scp_const: rrel_main_key_sc_element;;			
			=> nrel_then: .proc_of_simply_the_sc_design_search_isomorphic_12;;
			=> nrel_else: ..proc_gen;;
		*);;

		-> ..proc_gen (*
			<- genEl;;
			-> rrel_1: rrel_assign: rrel_scp_var: rrel_node: rrel_const: _stat;;
			=> nrel_goto: .proc_of_simply_the_sc_design_search_isomorphic_12;;
		*);;
//
//
// <==============================================
// создание биекций для дуг принадлежности
		-> .proc_of_simply_the_sc_design_search_isomorphic_12 (*
			<- searchSetStr5;;
			-> rrel_1: rrel_assign: rrel_scp_var: _el1;;
			-> rrel_2: rrel_assign: rrel_scp_var: rrel_pos: rrel_var: rrel_perm: _arc;;
			-> rrel_3: rrel_assign: rrel_scp_var: _el2;;
			-> rrel_4: rrel_assign: rrel_scp_var: rrel_pos_const_perm: _arc2;;
			-> rrel_5: rrel_fixed: rrel_scp_var: _found_a_bunch;;

			-> rrel_set_2: rrel_assign: rrel_scp_var: rrel_node: rrel_const: _set_pos_var_perm;;

			=> nrel_goto: .proc_of_simply_the_sc_design_search_isomorphic_13;;
		*);;

		-> .proc_of_simply_the_sc_design_search_isomorphic_13 (*
			<- searchElStr5;;
			-> rrel_1: rrel_assign: rrel_scp_var: _el1;;
			-> rrel_2: rrel_assign: rrel_scp_var: rrel_pos: rrel_var: rrel_perm: _arc;;
			-> rrel_3: rrel_assign: rrel_scp_var: _el2;;
			-> rrel_4: rrel_assign: rrel_scp_var: rrel_pos_const_perm: _arc2;;
			-> rrel_5: rrel_fixed: rrel_scp_var: _set_pos_var_perm;;
			=> nrel_then: .proc_of_simply_the_sc_design_search_isomorphic_14;;
			=> nrel_else: .proc_of_simply_the_sc_design_search_isomorphic_17;;		
		*);;

		-> .proc_of_simply_the_sc_design_search_isomorphic_14 (*
			<- eraseEl;;
			-> rrel_1: rrel_fixed: rrel_erase: rrel_scp_var: _arc2;;
			=> nrel_goto: .proc_of_simply_the_sc_design_search_isomorphic_15;;
		*);;

		-> .proc_of_simply_the_sc_design_search_isomorphic_15 (*
			<- call;; 
			-> rrel_1: rrel_fixed: rrel_scp_const: proc_of_simply_the_sc_design_generate_bijection;;
			-> rrel_2: rrel_fixed: rrel_scp_const: ... (*
				-> rrel_1: rrel_fixed: rrel_scp_var: _state;;
				-> rrel_2: rrel_fixed: rrel_scp_var: _el1;;
				-> rrel_3: rrel_fixed: rrel_scp_var: _el2;;
				-> rrel_4: rrel_fixed: rrel_scp_var: _arc;;
				-> rrel_5: rrel_fixed: rrel_scp_var: _nrel_bijection;;			
			*);;
			-> rrel_3: rrel_assign: rrel_scp_var: _descr;;
			=> nrel_goto: .proc_of_simply_the_sc_design_search_isomorphic_16;;
		*);;

		-> .proc_of_simply_the_sc_design_search_isomorphic_16 (*
			<- waitReturn;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _descr;;
			=> nrel_goto: .proc_of_simply_the_sc_design_search_isomorphic_17;;
		*);;
// ============================================================
// удаление сущностей в новом контуре
		-> .proc_of_simply_the_sc_design_search_isomorphic_17 (*
			<- eraseSetStr3;;
			-> rrel_1: rrel_fixed: rrel_scp_var: rrel_erase: _delete_entity;;
			-> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
			-> rrel_3: rrel_assign: rrel_scp_var: rrel_node: rrel_erase: _entity;;

			=> nrel_goto: .proc_of_simply_the_sc_design_search_isomorphic_18;;
		*);;

		-> .proc_of_simply_the_sc_design_search_isomorphic_18 (*
			<- genElStr3;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _state;;
			-> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
			-> rrel_3: rrel_assign: rrel_scp_var: rrel_node: rrel_const: _true;;
			=> nrel_goto: ..print2;;
		*);;

	    -> ..print2 (*
			<- printNl;;
			-> rrel_1: rrel_fixed: rrel_scp_const: [Процедура преобразования контура. Выход];;
			=> nrel_goto: .proc_of_simply_the_sc_design_search_kvazibinary_return;;
		*);;

		-> ..print3 (*
			<- printNl;;
			-> rrel_1: rrel_fixed: rrel_scp_const: [Процедура преобразования контура завершена с ошибкой];;
			=> nrel_goto: .proc_of_simply_the_sc_design_search_kvazibinary_return;;
		*);;

		-> .proc_of_simply_the_sc_design_search_kvazibinary_return (*
			<- return;;
		*);;
	*);;
*);;