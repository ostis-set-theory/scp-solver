// Процедура добавления выбранного узла в ответ
scp_program -> proc_of_finding_intersection_t (*
	-> rrel_params: ...(*
    	-> rrel_1: rrel_in: _s1;;
    	-> rrel_2: rrel_in: _s2;;
    	-> rrel_3: rrel_out: rrel_assign: rrel_scp_var: _s3;;
  	*);;
  
	-> rrel_operators: ...(*

		-> rrel_init: .proc_of_finding_intersection_t_operator0 (*
			<- genEl;;
			-> rrel_1: rrel_assign: rrel_scp_var: rrel_node: rrel_const: _s3;;
			
			=> nrel_goto: .proc_of_finding_intersection_t_operator12;;
		*);;

    	-> .proc_of_finding_intersection_t_operator12 (*
			<- searchSetStr3;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _s1;;
			-> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
			-> rrel_3: rrel_assign: rrel_scp_var: rrel_node: _el;;

				-> rrel_set_3: rrel_assign: rrel_scp_var: rrel_node: rrel_const: _setel1;;

			=> nrel_then: .proc_of_finding_intersection_t_operator13;;
      		=> nrel_else: .proc_of_finding_intersection_t_operator_return;;
		*);;
		
		-> .proc_of_finding_intersection_t_operator13 (*
			<- searchSetStr3;;
		  	-> rrel_1: rrel_fixed: rrel_scp_var: _s2;;
		  	-> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
		  	-> rrel_3: rrel_assign: rrel_scp_var: _el;;

		  		-> rrel_set_3: rrel_assign: rrel_scp_var: rrel_node: rrel_const: _setel2;;

		  	=> nrel_then: .proc_of_finding_intersection_t_operator14;;
      	  	=> nrel_else: .proc_of_finding_intersection_t_operator_return;;
		*);;
//-------------------------------------------------------------------

		// Поиск элемента в 1 контуре
		-> .proc_of_finding_intersection_t_operator14 (*
			<- searchElStr3;;
		-> rrel_1: rrel_fixed: rrel_scp_var: _setel1;;
		-> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc1;;
		-> rrel_3: rrel_assign: rrel_scp_var: _temp_el;;

      	=> nrel_then: .proc_of_finding_intersection_t_operator15;;
      	=> nrel_else: .proc_of_finding_intersection_t_operator_return;;
		*);;

		-> .proc_of_finding_intersection_t_operator15 (*
		 <- eraseEl;;
		 -> rrel_1: rrel_fixed: rrel_erase: rrel_scp_var: _arc1;;

		 => nrel_goto: .proc_of_finding_intersection_t_operator16;;
		 *);;

		-> .proc_of_finding_intersection_t_operator16 (*
			<- searchElStr3;;
		-> rrel_1: rrel_fixed: rrel_scp_var: _setel2;;
		-> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc2;;
		-> rrel_3: rrel_fixed: rrel_scp_var: _temp_el;;

      	=> nrel_then: .proc_of_finding_intersection_t_operator17;;
      	=> nrel_else: .proc_of_finding_intersection_t_operator14;;
		*);;

		-> .proc_of_finding_intersection_t_operator17 (*
		 	<- eraseEl;;
		-> rrel_1: rrel_fixed: rrel_erase: rrel_scp_var: _arc2;;

		=> nrel_goto: .proc_of_finding_intersection_t_operator18;;
		*);;

		-> .proc_of_finding_intersection_t_operator18 (*
			<- searchElStr3;;
		-> rrel_1: rrel_fixed: rrel_scp_var: _s3;;
		-> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arcdw3;;
		-> rrel_3: rrel_fixed: rrel_scp_var: _temp_el;;

		=> nrel_then: .proc_of_finding_intersection_t_operator14;;
      	=> nrel_else: .proc_of_finding_intersection_t_operator19;;
		*);;

		-> .proc_of_finding_intersection_t_operator19 (*
			<- genElStr3;;
		-> rrel_1: rrel_fixed: rrel_scp_var: _s3;;
		-> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc3;;
		-> rrel_3: rrel_fixed: rrel_scp_var: _temp_el;;

      	=> nrel_goto: .proc_of_finding_intersection_t_operator14;;
		*);;

	    -> .proc_of_finding_intersection_t_operator_return(*
    	  <- return;;
    *);;
  *);;
*);;
