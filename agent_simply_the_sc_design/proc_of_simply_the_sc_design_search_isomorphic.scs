scp_program -> proc_of_simply_the_sc_design_search_isomorphic (*	
	
	-> rrel_params: ...(*
		-> rrel_1: rrel_in: _state;;
		-> rrel_2: rrel_in: _contour;;
		// по выделенному контуру в исходном тождестве
		// ищется изоморфный контур правила
		// после нахождения ищется правая часть правила,
		// а именно связка принаждежащая дизъюнкции,
		// либо контур
		-> rrel_3: rrel_out: rrel_fixed: rrel_scp_var: _found_a_bunch;;
	*);;

	-> rrel_operators: ...(*
		
		-> rrel_init: ..print1 (*
			<- printNl;;
			-> rrel_1: rrel_fixed: rrel_scp_const: [Процедура поиска изоморфного графа. Вход];;
			=> nrel_goto: .proc_of_simply_the_sc_design_search_isomorphic_1;;
	   	*);;

	   	-> .proc_of_simply_the_sc_design_search_isomorphic_1 (*
			<- searchElStr3;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _contour;;
			-> rrel_2: rrel_assign: rrel_scp_var: rrel_pos_const_perm: _arc;;
			-> rrel_3: rrel_assign: rrel_scp_var: rrel_node: rrel_const: _nrel;;			
			=> nrel_then: .proc_of_simply_the_sc_design_search_isomorphic_2;;
			=> nrel_else: ..print4;;
		*);;

		-> ..print4 (*
			<- printNl;;
			-> rrel_1: rrel_fixed: rrel_scp_const: [Ошибка. Не найден узел отношения];;
			=> nrel_goto: ..print3;;
		*);;

		-> .proc_of_simply_the_sc_design_search_isomorphic_2 (*
			<- genEl;;
			-> rrel_1: rrel_assign: rrel_scp_var: rrel_node: rrel_const: _contour_left_rules;;
			=> nrel_goto: .proc_of_simply_the_sc_design_search_isomorphic_3;;
		*);;

		-> .proc_of_simply_the_sc_design_search_isomorphic_3 (*
			<- searchSetStr3;;
			-> rrel_1: rrel_assign: rrel_scp_var: _contours;;
			-> rrel_2: rrel_assign: rrel_scp_var: rrel_pos_const_perm: _arc;;
			-> rrel_3: rrel_fixed: rrel_scp_var: _nrel;;

			-> rrel_set_1: rrel_fixed: rrel_scp_var: _contour_left_rules;;
			
			=> nrel_goto: .proc_of_simply_the_sc_design_search_isomorphic_4;;
		*);;

		-> .proc_of_simply_the_sc_design_search_isomorphic_4 (*
			<- eraseElStr3;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _contour_left_rules;;
			-> rrel_2: rrel_assign: rrel_scp_var: rrel_pos_const_perm: _arc;;
			-> rrel_3: rrel_fixed: rrel_scp_var: _contour;;		
			=> nrel_goto: .proc_of_simply_the_sc_design_search_isomorphic_5;;
		*);;

// предполагается что с таким отношением будет один контур
		-> .proc_of_simply_the_sc_design_search_isomorphic_5 (*
			<- searchElStr3;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _contour_left_rules;;
			-> rrel_2: rrel_assign: rrel_scp_var: rrel_pos_const_perm: _arc;;
			-> rrel_3: rrel_assign: rrel_scp_var: _contour_left_rule;;
			=> nrel_then: .proc_of_simply_the_sc_design_search_isomorphic_6;;
			=> nrel_else: ..print5;;
		*);;

		-> .proc_of_simply_the_sc_design_search_isomorphic_6 (*
			<- eraseEl;;
			-> rrel_1: rrel_fixed: rrel_erase: rrel_scp_var: _arc;;
			=> nrel_goto: .proc_of_simply_the_sc_design_search_isomorphic_7;;
		*);;

		-> ..print5 (*
			<- printNl;;
			-> rrel_1: rrel_fixed: rrel_scp_const: [Ошибка. Правил не обнаружено];;
			=> nrel_goto: ..print3;;
		*);;

		-> .proc_of_simply_the_sc_design_search_isomorphic_7 (*
			<- genEl;;
			-> rrel_1: rrel_assign: rrel_scp_var: rrel_node: rrel_const: _svyazkas;;
			=> nrel_goto: .proc_of_simply_the_sc_design_search_isomorphic_8;;
		*);;

		-> .proc_of_simply_the_sc_design_search_isomorphic_8 (*
			<- searchElStr3;;
			-> rrel_1: rrel_assign: rrel_scp_var: _svyazka;;
			-> rrel_2: rrel_assign: rrel_scp_var: rrel_pos_const_perm: _arc;;
			-> rrel_3: rrel_fixed: rrel_scp_var: _contour_left_rule;;
			=> nrel_then: .proc_of_simply_the_sc_design_search_isomorphic_9;;
			=> nrel_else: ..print6;;
		*);;

		-> .proc_of_simply_the_sc_design_search_isomorphic_9 (*
			<- searchSetStr3;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _svyazka;;
			-> rrel_2: rrel_assign: rrel_scp_var: rrel_pos_const_perm: _arc;;
			-> rrel_3: rrel_assign: rrel_scp_var: _contours;;

			-> rrel_set_3: rrel_fixed: rrel_scp_var: _left_and_right;;

			=> nrel_goto: .proc_of_simply_the_sc_design_search_isomorphic_10;;
		*);;

		-> ..print6 (*
			<- printNl;;
			-> rrel_1: rrel_fixed: rrel_scp_const: [Извините. На данный момент связка импликации не обрабатывается];;
			=> nrel_goto: ..print3;;
		*);;

		-> .proc_of_simply_the_sc_design_search_isomorphic_10 (*
			<- eraseElStr3;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _left_and_right;;
			-> rrel_2: rrel_assign: rrel_scp_var: rrel_pos_const_perm: _arc;;
			-> rrel_3: rrel_fixed: rrel_scp_var: _contour_left_rule;;		
			=> nrel_goto: .proc_of_simply_the_sc_design_search_isomorphic_11;;
		*);;

		-> .proc_of_simply_the_sc_design_search_isomorphic_11 (*
			<- searchElStr3;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _left_and_right;;
			-> rrel_2: rrel_assign: rrel_scp_var: rrel_pos_const_perm: _arc;;
			-> rrel_3: rrel_assign: rrel_scp_var: _found_a_bunch;;
			=> nrel_then: .proc_of_simply_the_sc_design_search_isomorphic_12;;
			=> nrel_else: ..print7;;
		*);;

		-> ..print7 (*
			<- printNl;;
			-> rrel_1: rrel_fixed: rrel_scp_const: [Ошибка. Неверное правило];;
			=> nrel_goto: ..print3;;
		*);;

		-> .proc_of_simply_the_sc_design_search_isomorphic_12 (*
			<- genElStr3;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _state;;
			-> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
			-> rrel_3: rrel_assign: rrel_scp_var: rrel_node: rrel_const: _true;;
			=> nrel_goto: ..print2;;
		*);;

	    -> ..print2 (*
			<- printNl;;
			-> rrel_1: rrel_fixed: rrel_scp_const: [Процедура поиска квазибинарного отношения. Выход];;
			=> nrel_goto: .proc_of_simply_the_sc_design_search_isomorphic_return;;
		*);;

		-> ..print3 (*
			<- printNl;;
			-> rrel_1: rrel_fixed: rrel_scp_const: [Процедура поиска квазибинарного отношения завершена с ошибкой];;
			=> nrel_goto: .proc_of_simply_the_sc_design_search_isomorphic_return;;
		*);;

		-> .proc_of_simply_the_sc_design_search_isomorphic_return (*
			<- return;;
		*);;
	*);;
*);;