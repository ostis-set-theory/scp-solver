scp_program -> proc_is_list (*
	
	-> rrel_params: ...(*
		
		// 07.05.17
		// текущий узел в дереве
		-> rrel_1: rrel_in: _element;;
		
		// тип узла, если есть элемент, то лист
		-> rrel_2: rrel_out: rrel_assign: rrel_scp_var: _type;;
	*);;

	-> rrel_operators: ...(*

		-> rrel_init: .proc_is_list_1 (*
			<- genEl;;
			-> rrel_1: rrel_assign: rrel_scp_var: rrel_node: rrel_const: _type;;
			=> nrel_goto: .proc_is_list_2;;
		*);;

	   	-> .proc_is_list_2 (*
			<- searchElStr5;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _element;;
			-> rrel_2: rrel_assign: rrel_scp_var: rrel_common: _arc;;
			-> rrel_3: rrel_assign: rrel_scp_var: _values;;
			-> rrel_4: rrel_assign: rrel_scp_var: rrel_pos_const_perm: _arc2;;
			-> rrel_5: rrel_fixed: rrel_scp_const: nrel_binary_tree_branch_left;;
			=> nrel_then: ..print3;;
			=> nrel_else: .proc_is_list_3;;
		*);;

		-> .proc_is_list_3 (*
			<- searchElStr5;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _element;;
			-> rrel_2: rrel_assign: rrel_scp_var: rrel_common: _arc;;
			-> rrel_3: rrel_assign: rrel_scp_var: _values;;
			-> rrel_4: rrel_assign: rrel_scp_var: rrel_pos_const_perm: _arc2;;
			-> rrel_5: rrel_fixed: rrel_scp_const: nrel_binary_tree_branch;;
			=> nrel_then: ..print3;;
			=> nrel_else: .proc_is_list_4;;
		*);;

		-> .proc_is_list_4 (*
			<- genElStr3;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _type;;
			-> rrel_2: rrel_assign: rrel_scp_var: rrel_pos_const_perm: _arc;;
			-> rrel_3: rrel_assign: rrel_scp_var: _list;;
			=> nrel_goto: ..print2;;
		*);;

	    -> ..print2 (*
			<- printNl;;
			-> rrel_1: rrel_fixed: rrel_scp_const: [Элемент лист];;
			=> nrel_goto: .proc_is_list_5;;
		*);;

		-> ..print3 (*
			<- printNl;;
			-> rrel_1: rrel_fixed: rrel_scp_const: [Элемент не лист];;
			=> nrel_goto: .proc_is_list_5;;
		*);;

		-> .proc_is_list_5 (*
			<- call;;
			-> rrel_1: rrel_fixed: rrel_scp_const: proc_print_system_idtf;;
			-> rrel_2: rrel_fixed: rrel_scp_const: ... (*
				-> rrel_1: rrel_fixed: rrel_scp_var: _element;;			
			*);;
			-> rrel_3: rrel_assign: rrel_scp_var: _descr;;
			=> nrel_goto: .proc_is_list_6;;
		*);;

		-> .proc_is_list_6 (*
			<- waitReturn;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _descr;;
			=> nrel_goto: .proc_is_list_return;;
		*);;

		-> .proc_is_list_return (*
			<- return;;
		*);;
	*);;
*);;