scp_program -> proc_gen_kv (*
	
	-> rrel_params: ... (*
		-> rrel_1: rrel_in: _el_type_oriented;;
		-> rrel_2: rrel_in: _first;;
		-> rrel_3: rrel_in: _second;;
		-> rrel_4: rrel_in: _nrel;;
		-> rrel_5: rrel_in: _el_contour;;
		-> rrel_6: rrel_out: rrel_assign: rrel_scp_var: _element_result;;
	*);;

	-> rrel_operators: ...(*

		-> rrel_init: .proc_gen_kv_A (*
			<- searchElStr3;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _el_contour;;
			-> rrel_2: rrel_assign: rrel_scp_var: rrel_pos_const_perm: _arc5;;
			-> rrel_3: rrel_assign: rrel_scp_var: _contour;;
			=> nrel_then: .proc_gen_kv_1;;
			=> nrel_else: ..print3;;
		*);;

		-> .proc_gen_kv_1 (*
			<- genElStr5;;
			-> rrel_1: rrel_assign: rrel_scp_var: rrel_node: rrel_var: rrel_not_binary_tuple: _tuple;;
			-> rrel_2: rrel_assign: rrel_scp_var: rrel_common: rrel_var: _arc;;
			-> rrel_3: rrel_assign: rrel_scp_var: rrel_node: rrel_var: _element_result;;	
			-> rrel_4: rrel_assign: rrel_scp_var: rrel_pos: rrel_var: rrel_perm: _arc2;;
			-> rrel_5: rrel_fixed: rrel_scp_var: _nrel;;				
			=> nrel_goto: .proc_gen_kv_2;;
		*);;

		-> .proc_gen_kv_2 (*
			<- genElStr3;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _tuple;;
			-> rrel_2: rrel_assign: rrel_scp_var: rrel_pos: rrel_var: rrel_perm: _arc3;;
			-> rrel_3: rrel_fixed: rrel_scp_var: _first;;
			=> nrel_goto: .proc_gen_kv_3;;
		*);;

		-> .proc_gen_kv_3 (*
			<- genElStr3;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _tuple;;
			-> rrel_2: rrel_assign: rrel_scp_var: rrel_pos: rrel_var: rrel_perm: _arc4;;
			-> rrel_3: rrel_fixed: rrel_scp_var: _second;;
			=> nrel_goto: .proc_gen_kv_4;;
		*);;

		// если отношение ориентированное
		-> .proc_gen_kv_4 (*
			<- searchElStr3;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _el_type_oriented;;
			-> rrel_2: rrel_assign: rrel_scp_var: rrel_pos_const_perm: _arc5;;
			-> rrel_3: rrel_assign: rrel_scp_var: _oriented;;
			=> nrel_then: .proc_gen_kv_5;;
			=> nrel_else: .proc_gen_kv_7;;
		*);;

		-> .proc_gen_kv_5 (*
			<- genElStr3;;
			-> rrel_1: rrel_fixed: rrel_scp_const: rrel_1;;
			-> rrel_2: rrel_assign: rrel_scp_var: rrel_pos: rrel_var: rrel_perm: _arc5;;
			-> rrel_3: rrel_fixed: rrel_scp_var: _arc3;;
			=> nrel_goto: .proc_gen_kv_6;;
		*);;

		-> .proc_gen_kv_6 (*
			<- genElStr3;;
			-> rrel_1: rrel_fixed: rrel_scp_const: rrel_2;;
			-> rrel_2: rrel_assign: rrel_scp_var: rrel_pos: rrel_var: rrel_perm: _arc5;;
			-> rrel_3: rrel_fixed: rrel_scp_var: _arc4;;
			=> nrel_goto: .proc_gen_kv_7;;
		*);;

// ======================================

		-> .proc_gen_kv_7 (*
			<- genElStr3;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _contour;;
			-> rrel_2: rrel_assign: rrel_scp_var: rrel_pos_const_perm: _arc5;;
			-> rrel_3: rrel_fixed: rrel_scp_var: _element_result;;
			=> nrel_goto: .proc_gen_kv_8;;
		*);;

		-> .proc_gen_kv_8 (*
			<- searchElStr3;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _contour;;
			-> rrel_2: rrel_assign: rrel_scp_var: rrel_pos_const_perm: _arc5;;
			-> rrel_3: rrel_fixed: rrel_scp_var: _first;;
			=> nrel_then: .proc_gen_kv_10;;
			=> nrel_else: .proc_gen_kv_9;;
		*);;

		-> .proc_gen_kv_9 (*
			<- genElStr3;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _contour;;
			-> rrel_2: rrel_assign: rrel_scp_var: rrel_pos_const_perm: _arc5;;
			-> rrel_3: rrel_fixed: rrel_scp_var: _first;;
			=> nrel_goto: .proc_gen_kv_10;;
		*);;

		-> .proc_gen_kv_10 (*
			<- searchElStr3;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _contour;;
			-> rrel_2: rrel_assign: rrel_scp_var: rrel_pos_const_perm: _arc5;;
			-> rrel_3: rrel_fixed: rrel_scp_var: _second;;
			=> nrel_then: .proc_gen_kv_12;;
			=> nrel_else: .proc_gen_kv_11;;
		*);;

		-> .proc_gen_kv_11 (*
			<- genElStr3;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _contour;;
			-> rrel_2: rrel_assign: rrel_scp_var: rrel_pos_const_perm: _arc5;;
			-> rrel_3: rrel_fixed: rrel_scp_var: _second;;
			=> nrel_goto: .proc_gen_kv_12;;
		*);;

		-> .proc_gen_kv_12 (*
			<- searchElStr3;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _contour;;
			-> rrel_2: rrel_assign: rrel_scp_var: rrel_pos_const_perm: _arc5;;
			-> rrel_3: rrel_fixed: rrel_scp_var: _nrel;;
			=> nrel_then: .proc_gen_kv_14;;
			=> nrel_else: .proc_gen_kv_13;;
		*);;

		-> .proc_gen_kv_13 (*
			<- genElStr3;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _contour;;
			-> rrel_2: rrel_assign: rrel_scp_var: rrel_pos_const_perm: _arc5;;
			-> rrel_3: rrel_fixed: rrel_scp_var: _nrel;;
			=> nrel_goto: .proc_gen_kv_14;;
		*);;
// ==========================================

		-> .proc_gen_kv_14 (*
			<- genElStr3;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _contour;;
			-> rrel_2: rrel_assign: rrel_scp_var: rrel_pos_const_perm: _arc5;;
			-> rrel_3: rrel_fixed: rrel_scp_var: _arc;;
			=> nrel_goto: .proc_gen_kv_15;;
		*);;

		-> .proc_gen_kv_15 (*
			<- genElStr3;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _contour;;
			-> rrel_2: rrel_assign: rrel_scp_var: rrel_pos_const_perm: _arc5;;
			-> rrel_3: rrel_fixed: rrel_scp_var: _arc2;;
			=> nrel_goto: .proc_gen_kv_16;;
		*);;

		// если отношение ориентированное
		-> .proc_gen_kv_16 (*
			<- searchElStr3;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _el_type_oriented;;
			-> rrel_2: rrel_assign: rrel_scp_var: rrel_pos_const_perm: _arc5;;
			-> rrel_3: rrel_assign: rrel_scp_var: _oriented;;
			=> nrel_then: .proc_gen_kv_17;;
			=> nrel_else: ..print2;;
		*);;

		-> .proc_gen_kv_17 (*
			<- genElStr3;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _contour;;
			-> rrel_2: rrel_assign: rrel_scp_var: rrel_pos_const_perm: _arc5;;
			-> rrel_3: rrel_fixed: rrel_scp_var: _arc3;;
			=> nrel_goto: .proc_gen_kv_18;;
		*);;

		-> .proc_gen_kv_18 (*
			<- genElStr3;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _contour;;
			-> rrel_2: rrel_assign: rrel_scp_var: rrel_pos_const_perm: _arc5;;
			-> rrel_3: rrel_fixed: rrel_scp_var: _arc4;;
			=> nrel_goto: ..print2;;
		*);;

	   	-> ..print2 (*
			<- printNl;;
			-> rrel_1: rrel_fixed: rrel_scp_const: [Генерация квазибинарного отношения выход];;
			=> nrel_goto: .proc_gen_kv_return;;
	   	*);;

	   	-> ..print3 (*
			<- printNl;;
			-> rrel_1: rrel_fixed: rrel_scp_const: [Ошибка ! Генерация квазибинарного отношения ! Контур не найден];;
			=> nrel_goto: .proc_gen_kv_return;;
	   	*);;

		-> .proc_gen_kv_return (*
			<- return;;
		*);;
	*);;
*);;